numer:true$
gseidel(A,b,x_0,expo,N):=block
(
    [bool:true,x,er,temp,fila,TOL,tb,n],
    fpprintprec:expo+3,
    TOL:(10)^(-expo),
    n:length(A),
    x:copymatrix(x_0),
    tb:matrix(["N"]),
    tb:addcol(tb,makelist(concat("X",i),i,n),makelist(concat("EX",i),i,n),["ERROR"]),
    for k:1 step 1 while (k<=N and bool=true) do
    (
        for i:1 thru n do(            
            x[1][i]:(1/A[i][i])*(-lsum(A[i][j]*x[1][j],j,makelist(expre,expre,1,i-1))-lsum(A[i][j]*x_0[1][j],j,makelist(expre,expre,i+1,n))+b[i][1])
        ),
        er:abs(x-x_0),
        temp:sort(list_matrix_entries(er), 'ordergreatp),        
        fila:matrix([k]),
        fila:addcol(fila,x,er,[temp[1]]),
        tb:addrow(tb,fila),
        if is(temp[1]<TOL) then
        (
            print("tolerancia cumplida"),
            bool:flase
        ),
        x_0:copymatrix(x)
    ),
    if bool then print("Iteraciones agotadas"),
    return(tb)
)$

dominante(matriz):=block
(
   [n,noCumple:0,suma:0,numDiagonal,k:0],
   
   n:length(matriz),
   if ( matrixp(matriz)=true ) then
   (

     for i:1 step 1 while (i<=n) do
     (
          k:k+abs(matriz[i][i])
     ),
    print("Suma valores abs diagonal es ", k),

     for i:1 step 1 while (i<=n) do
     (
        for j:1 step 1 while (j<=n) do
        (
          if (i=j) then
            numDiagonal:abs(matriz[i][j])
          else
          (
            suma:suma+abs(matriz[i][j])
          )
        ),

        print(numDiagonal,">",suma,"  es ",is(numDiagonal>suma) ),
        
        if(numDiagonal>suma) then
        (
           noCumple:noCumple+0
         )
        else
        (
           noCumple:noCumple+1
        ),
           
        suma:0
     ),   /*fin for*/
   
     if (noCumple=0) then
       print("Matriz diagonalmente dominante")
     else
       print("Matriz parcialmente dominante")
   )else(
     print("Ingrese una matriz")
   ),
 return("---WeGT---")
)$